syntax = "proto2";
package co2config;

message Co2Config {
    optional string cO2Port = 1; // serial port for CO2 monitor
    optional uint32 logLevel = 2;

    message NetConfig {
        optional string netDevice = 1;
        optional uint32 networkCheckPeriod = 2; // How often to test network connectivity (in seconds)
        optional uint32 watchdogKickPeriod = 3; // How often to kick watchdog. should not be more than half WatchdogSec
        optional uint32 netDeviceDownRebootMinTime = 4; // Minimum number of seconds network device should be down before reboot is initiated.
    }

    optional NetConfig netConfig = 3;

    message SdlConfig {
        optional string fbdev = 1; // These will be used in preference to
        optional string mousedev = 2; // respective environment variables (if set).
        optional string videodriver = 3; // 
        optional string ttfDir = 4; // dir where screen fonts are stored
        optional string bitmapDir = 5; // dir where screen iamges are stored
        optional uint32 screenRefreshRate = 6; // Screen refresh rate in FPS
        optional uint32 screenTimeout = 7; // Screen saver kicks in after this many seconds of inactivity
    }

    optional SdlConfig sdlConfig = 4;

    message FanConfig {
        optional uint32 fanOnOverrideTime = 1; // Amount of time (minutes) fan stays on for manual override
        optional uint32 relHumFanOnThreshold = 2; // Rel Humidity threshold (%) above which fan starts
        optional uint32 cO2FanOnThreshold = 3; // CO2 threshold (ppm) above which fan starts
    }

    optional FanConfig fanConfig = 5;

    enum RestartType {
        NONE = 0;
        REBOOT = 1;
        SHUTDOWN = 2;
    }

    optional RestartType restartType = 6;

} // end Co2Config



